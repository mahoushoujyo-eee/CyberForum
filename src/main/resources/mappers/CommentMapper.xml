<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.cyberforum.mapper.CommentMapper">
    <resultMap id="commentMap" type="org.example.cyberforum.entities.Comment">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="user_id" property="userId"/>
        <result column="blog_id" property="blogId"/>
        <result column="create_time" property="creationTime"/>
        <result column="is_top" property="isTop"/>
    </resultMap>

    <resultMap id="CommentInfoMap" type="org.example.cyberforum.dto.CommentInfo">
        <id column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="user_id" property="userId"/>
        <result column="user_name" property="username"/>
        <result column="blog_id" property="blogId"/>
        <result column="create_time" property="creationTime"/>
        <result column="is_top" property="isTop"/>
    </resultMap>

    <insert id="addComment">
        INSERT INTO comment(content,user_id,blog_id,create_time)
        VALUES(#{content},#{userId},#{blogId},#{creationTime})
    </insert>
    <update id="putTop">
        UPDATE comment
        SET is_top = 1
        WHERE id = #{commentId}
    </update>

    <update id="cancelTop">
        UPDATE comment
        SET is_top = 0
        WHERE id = #{commentId}
    </update>

    <delete id="deleteCommentById">
        DELETE FROM comment
        WHERE id = #{id}
    </delete>

    <delete id="deleteCommentByBlogIdAndUserId">
        DELETE FROM comment
        WHERE blog_id = #{blogId}
        AND user_id = #{userId}
    </delete>

    <select id="getCommentList" resultMap="commentMap">
        SELECT id,content,user_id,blog_id,create_time, is_top
        FROM comment
    </select>

    <select id="getComment" resultMap="commentMap">
        SELECT id,content,user_id,blog_id,create_time, is_top
        FROM comment
        WHERE id = #{id}
    </select>

    <select id="getCommentsByBlogId" resultMap="commentMap">
        SELECT id,content,user_id,blog_id,create_time, is_top
        FROM comment
        WHERE blog_id = #{blogId}
        ORDER BY create_time
    </select>

    <select id="ifContainsComment" resultType="java.lang.Boolean">
        SELECT COUNT(1) > 0
        FROM comment
        WHERE id = #{commentId}
    </select>

    <select id="getCommentInfoList" resultMap="commentMap">
        SELECT c.id,c.content,c.user_id,c.blog_id,c.create_time,c.is_top,u.user_name
        FROM comment c
        LEFT JOIN user u
        ON c.user_id = u.id
    </select>

    <select id="getCommentInfoListByBlogId" resultMap="CommentInfoMap">
        SELECT c.id,c.content,c.user_id,c.blog_id,c.create_time,c.is_top,u.user_name
        FROM comment c
        LEFT JOIN user u
        ON c.user_id = u.id
        WHERE c.blog_id = #{blogId}
    </select>
</mapper>